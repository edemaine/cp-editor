html
  head
    meta(charset="utf-8")
    title Crease Pattern Editor
    script(src='node_modules/svg.js/dist/svg.min.js')
    script(src='node_modules/fold/dist/fold.js')
    script(src='cpedit.js')
    style
      include:stylus cpedit.styl
  body
    #menu
      .input.clickable
        input#loadCP(type='button', value='Load .cp', title='Load previously saved .cp file')
        input#fileCP(type='file', style='display: none')
      .input.clickable
        input#downloadCP(type='button', value='Save .cp', title='For reloading with this editor (weird .fold-like format)')
        a#cplink
      .input.clickable
        input#downloadFold(type='button', value='Export .fold', title='For all software supporting .fold, including Freeform Origami and Origami Simulator')
        a#foldlink
      .input.clickable
        input#downloadSVG(type='button', value='Export .svg', title='For Origami Simulator or paper figures')
        a#svglink
      hr
      .input
        input#title(type='text', placeholder='Title')
      .input
        label Width
        span.number#width 4
        button#widthDec &minus;
        button#widthInc +
      .input
        label Height
        span.number#height 4
        button#heightDec &minus;
        button#heightInc +
      .input
        label Transform:
        button#reflectX(title="Reflect horizontally") ⇹
        button#reflectY(title="Reflect vertically") ↕
        button#rotateCCW(title="Rotate 90° counterclockwise") ⟲
        button#rotateCW(title="Rotate 90° clockwise") ⟳
      hr
      .input.clickable
        input#undo(type='button', value='Undo', title='Shortcut: z or ctrl-z')
      .input.clickable
        input#redo(type='button', value='Redo', title='Shortcut: y or shift-z or ctrl-y or ctrl-shift-z')
      hr
      .input.clickable
        input#drawLine(type='radio', name='mode', checked)
        label(for='drawLine') Draw Crease (<code>d</code>)
      .input.clickable
        input#assignLine(type='radio', name='mode')
        label(for='assignLine') Assign Crease (<code>a</code>)
      .input.clickable
        input#eraseLine(type='radio', name='mode')
        label(for='eraseLine') Erase Crease (<code>e</code>)
      .input.clickable
        input#moveVertex(type='radio', name='mode')
        label(for='moveVertex') Move Vertex (<code>m</code>)
      hr
      .input.clickable
        input#boundary(type='radio', name='line', value='B', checked)
        label(for='boundary') Boundary (<code>B</code>)
      .input.clickable
        input#mountain(type='radio', name='line', value='M')
        label(for='mountain') Mountain (<code>M</code>)
      .input.clickable
        input#valley(type='radio', name='line', value='V')
        label(for='valley') Valley (<code>V</code>)
      .input.clickable
        input#unfolded(type='radio', name='line', value='U')
        label(for='unfolded') Unfolded (<code>U</code>)
      .input.clickable
        input#cut(type='radio', name='line', value='C')
        label(for='cut') Cut (<code>C</code>)
      .multinput
        .input
          label(for='angle', title='Between 0 and 180 degrees. Use Mountain/Valley for sign. Can use JavaScript formulas.') Absolute fold angle:
          .gap
          button#angleAdd1 +1
          button#angleAdd90 +90
        .input
          input#angle(type='text', value='180', title='Between 0 and 180 degrees. Use Mountain/Valley for sign. Can use JavaScript formulas.')
          .gap
          button#angleSub1 &minus;1
          button#angleSub90 &minus;90
    div#interface
    div#tempSVG(style='display: none')
